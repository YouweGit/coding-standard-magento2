<?xml version="1.0"?>
<!--
/**
 * Copyright Youwe. All rights reserved.
 * https://www.youweagency.com
 *
 * TODO:: Create a separate ruleset for phtml files, since a lot of exceptions need to be made just for adding phtml to code sniffer.
 */
-->
<ruleset name="YouweMagento2">
    <description>Youwe coding standards for Magento2 websites and modules</description>
    <!-- TODO:: Check if these values are correct. Did not see anything about how to configure this in documentation -->
    <arg name="extensions" value="php/PHP,phtml/PHP,js/JS,css/CSS,xml/XML,less/CSS" />

    <!-- Base rules on Youwe -->
    <rule ref="Youwe">
        <!-- Magento 2 does not use return types everywhere in the code base yet. So we cannot make this mandatory. -->
        <exclude name="GlobalCommon.Php7.ReturnType" />
        <!-- Magento 2 still uses $_ to tell if it's protected, so we cannot mandate this. -->
        <exclude name="GlobalCommon.NamingConventions.ValidVariableName" />
        <!-- TODO:: Check if this rule still needs to be excluded. Seems logical that all classes should start with camelcase -->
        <exclude name="Squiz.Classes.ValidClassName.NotCamelCaps" />
        <!--TODO:: Check if this should not be excluded. Seems logical to add throws in function comment. -->
        <exclude name="Squiz.Commenting.FunctionComment.EmptyThrows" />
        <!-- Magento 2 still does not strict type arguments of functions. This is why this rule is excluded. -->
        <exclude name="Squiz.Commenting.FunctionComment.ScalarTypeHintMissing" />
        <!-- Magento 2 still does not strict type arguments of functions. This is why this rule is excluded. -->
        <exclude name="Squiz.Commenting.FunctionComment.TypeHintMissing" />
    </rule>

    <!-- Import most rules from official Magento2 coding standard -->
    <rule ref="Magento2">
        <!-- Excluded because short descriptions are not mandatory in Youwe for a method. -->
        <exclude name="Magento2.Annotation" />
        <!--
        Excluded because in PHP 8.1 it's already possible to declare what type it is.
        Also most class properties are self-explanatory.
        -->
        <exclude name="Magento2.Commenting.ClassPropertyPHPDocFormatting" />

        <!-- While we wait for https://github.com/magento/magento-coding-standard/pull/416 to be merged -->
        <!-- See also https://github.com/YouweGit/coding-standard-magento2/issues/6 -->
        <exclude name="PSR2.ControlStructures.ControlStructureSpacing" />
    </rule>

    <rule ref="Squiz.WhiteSpace.MemberVarSpacing" >
        <properties>
            <property name="spacingBeforeFirst" value="0"/>
        </properties>
    </rule>

    <!--
        These sniffs are in the Youwe standard, but should not apply to Magento2
        templates.
        Because the Magento2 standard tells PHP_CodeSniffer to treat all *.html
        and *.phtml files as PHP files, we need to add <exclude-pattern>
        directives to specifically stop these sniffs from applying to Magento
        template files. We can't use a single <exclude-pattern> directive in the
        <rule ref="Youwe"> block above, as that would also apply to any sniffs
        which are in both standards.
        And XML files are excluded here too.
    -->
    <rule ref="Generic.Commenting.DocComment"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <rule ref="Generic.PHP.DisallowAlternativePHPTags"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <rule ref="PSR12.ControlStructures.BooleanOperatorPlacement"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <rule ref="PSR12.ControlStructures.ControlStructureSpacing"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <rule ref="PSR12.Files.DeclareStatement"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <rule ref="PSR12.Files.FileHeader"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <rule ref="PSR12.Traits.UseDeclaration"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <rule ref="Squiz.Commenting.FunctionComment"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <rule ref="Squiz.Commenting.FunctionCommentThrowTag"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <rule ref="Squiz.Commenting.VariableComment"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <rule ref="Squiz.WhiteSpace.FunctionSpacing"><exclude-pattern>*.(x|p?ht)ml$</exclude-pattern></rule>
    <!-- Excluding this for the same reasons as above, but only for XML files -->
    <rule ref="PSR12.Operators.OperatorSpacing"><exclude-pattern>*.xml$</exclude-pattern></rule>
</ruleset>
